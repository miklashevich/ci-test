stages:
    - build
    - test
    - deploy


Docker Build:
  stage: build
  image: docker:20.10.16
  variables:
    DOCKER_HOST: tcp://docker:2375
    DOCKER_TLS_CERTDIR: ""

  services:
  - docker:20.10.16-dind

  script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN ${CI_REGISTRY}
    - docker build --cache-from $CI_REGISTRY_IMAGE:latest -t ${CI_REGISTRY}/${CI_PROJECT_PATH}/${CI_PROJECT_NAME}:${CI_COMMIT_REF_SLUG} . 
    - docker push ${CI_REGISTRY}/${CI_PROJECT_PATH}/${CI_PROJECT_NAME}:${CI_COMMIT_REF_SLUG}
    - docker tag ${CI_REGISTRY}/${CI_PROJECT_PATH}/${CI_PROJECT_NAME}:${CI_COMMIT_REF_SLUG} ${CI_REGISTRY}/${CI_PROJECT_PATH}/${CI_PROJECT_NAME}:latest
    - docker push ${CI_REGISTRY}/${CI_PROJECT_PATH}/${CI_PROJECT_NAME}:latest


test:
  stage: test
  image: docker:20.10.16
  variables:
    DOCKER_HOST: tcp://docker:2375
    DOCKER_TLS_CERTDIR: ""
  services:
  - docker:20.10.16-dind

  script:
  #  - docker run -v $(pwd):/tests golang:1.16.6-alpine3.14 /tests/scripts/test_in_docker.sh
  #  - docker run --rm -v $(pwd)/run-tests.sh:/run-tests.sh golang:1.16.6-alpine3.14 bash /run-tests.sh
    - docker run --rm -v /usr/bin:/usr/bin --privileged -v $(pwd)/run-tests.sh:/run-tests.sh golang:1.16.6-alpine3.14 bash /run-tests.sh
    
#  tags: 
#    - vm_aws_docker_runner   
  allow_failure: true

Deploy:
  stage: deploy    
  before_script:
    - export ANSIBLE_CONFIG=./ansible.cfg
    - 'command -v ssh-agent >/dev/null || ( apt-get update -y && apt-get install openssh-client -y )'
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan gitlab.com >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts

  script:
    - echo "Deploy"
    - ansible all -m ping -i ./inventory 
    - ansible-playbook ansible/skillbox_app.yml -i ./inventory -b -vv
  tags: 
    - vm_aws_docker_runner  
  allow_failure: true

  




