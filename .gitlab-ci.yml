stages:
    - build
    - test
    - deploy

cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - go.mod
    - go.sum


Docker Build:
  stage: build
  image: docker:24.0.5
  variables:
    DOCKER_HOST: tcp://docker:2375
    DOCKER_TLS_CERTDIR: ""
    IMAGE_NAME: "skillbox_app"

  services:
  - docker:24.0.5-dind 

  script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN ${CI_REGISTRY}
    - docker build --cache-from $CI_REGISTRY_IMAGE:latest -t $CI_REGISTRY/$CI_PROJECT_PATH/$CI_COMMIT_BRANCH/$IMAGE_NAME:$CI_COMMIT_SHORT_SHA .

    - IMAGE_ID=$(docker images | grep $CI_REGISTRY/$CI_PROJECT_PATH/$CI_COMMIT_BRANCH\/$IMAGE_NAME | awk '{print $3}')
    - docker tag $IMAGE_ID $CI_REGISTRY/$CI_PROJECT_PATH/$CI_COMMIT_BRANCH/$IMAGE_NAME:latest
    - docker push $CI_REGISTRY/$CI_PROJECT_PATH/$CI_COMMIT_BRANCH/$IMAGE_NAME:$CI_COMMIT_SHORT_SHA
    - docker push $CI_REGISTRY/$CI_PROJECT_PATH/$CI_COMMIT_BRANCH/$IMAGE_NAME:latest
 
  tags: 
    - hp_runner 


test:
  stage: test
  image: docker:24.0.5
  variables:
    DOCKER_HOST: tcp://docker:2375
    DOCKER_TLS_CERTDIR: ""
  services:
  - docker:24.0.5-dind
  script:
    - docker run -v $(pwd):/tests golang:1.16.6-alpine3.14 /tests/scripts/test_in_docker.sh
    
  tags: 
    - hp_runner     

Deploy_to_test_env:
  stage: deploy 
  needs:
    - test 
  rules:
    - if: $CI_COMMIT_BRANCH == "uat"  
  before_script:
    - export ANSIBLE_CONFIG=./ansible.cfg
    - 'command -v ssh-agent >/dev/null || ( apk update && apk add openssh-client )'
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan gitlab.com >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
    - apk add --no-cache aws-cli python3 py3-pip
    - pip3 install boto3 botocore

  image:
    name: uhligit/ansible:2.1.0-3-g46e41b3

  script:
    - echo "Deploy to test env"
    - aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
    - aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
    - ansible-inventory --graph -i ansible/service.aws_ec2.yml
    - ansible-playbook ansible/skillbox_app.yml -i ansible/service.aws_ec2.yml --extra-vars "ci_commit_branch=$CI_COMMIT_BRANCH"
  tags: 
    - hp_runner   
  
Deploy_to_prod:
  stage: deploy 
  rules:
    - if: $CI_COMMIT_BRANCH == "main"  
      when: manual
  before_script:
    - export ANSIBLE_CONFIG=./ansible.cfg
    - 'command -v ssh-agent >/dev/null || ( apk update && apk add openssh-client )'
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan gitlab.com >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
    - apk add --no-cache aws-cli python3 py3-pip
    - pip3 install boto3 botocore



  image:
    name: uhligit/ansible:2.1.0-3-g46e41b3

  script:
    - echo "Deploy to prod env"
    - aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
    - aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
    - ansible-inventory --graph -i ansible/service.aws_ec2.yml
    - ansible-playbook ansible/skillbox_app.yml -i ansible/service.aws_ec2.yml --extra-vars "ci_commit_branch=$CI_COMMIT_BRANCH release_version_value=$CI_COMMIT_SHORT_SHA" --force
  tags: 
    - hp_runner


