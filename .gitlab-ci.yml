stages:
    - build
    - test
    - deploy


Docker Build:
  stage: build
  image:
    name: gcr.io/kaniko-project/executor:v1.9.0-debug
    entrypoint: [""]
  script:
    - /kaniko/executor
      --context "${CI_PROJECT_DIR}"
      --dockerfile "${CI_PROJECT_DIR}/Dockerfile"
      --destination "${CI_REGISTRY_IMAGE}:${CI_COMMIT_TAG}"


test:
  stage: test
  image:
    name: ubuntu:20.04

  script:
    - whereis bash | grep bash
    - apt-get update
    - apt-get install apt-transport-https ca-certificates curl gnupg-agent software-properties-common
    - curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
    - sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu focal stable"
    - apt-get update
    - apt-get install docker-ce docker-ce-cli containerd.io
    - docker images | grep REPOSITORY
    - docker run --rm -i ubuntu bash -c './run-tests.sh'
    - RUN apk update && apk add bash
    - chmod u+x run-tests.sh
    - bash -c "./run-tests.sh"

#  tags: 
#    - vm_aws_docker_runner   
  allow_failure: true

Deploy:
  stage: deploy    
  before_script:
    - export ANSIBLE_CONFIG=./ansible.cfg
    - 'command -v ssh-agent >/dev/null || ( apt-get update -y && apt-get install openssh-client -y )'
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan gitlab.com >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts

  script:
    - echo "Deploy"
    - ansible all -m ping -i ./inventory 
    - ansible-playbook ansible/skillbox_app.yml -i ./inventory -b -vv
  tags: 
    - vm_aws_docker_runner  
  allow_failure: true

  




