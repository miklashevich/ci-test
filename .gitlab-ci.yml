stages:
    - build
    - test
    - deploy


Docker Build:
  stage: build
  services:
    - docker:20.10.16-dind
  image: docker:20.10.16
  tags:
    - dind
  variables:
    DOCKER_HOST: tcp://docker:2375
    DOCKER_TLS_CERTDIR: ""
    DOCKERFILE: Dockerfile
  script:
    - docker build -t $CI_REGISTRY_IMAGE:${CI_COMMIT_SHORT_SHA} --file ${DOCKERFILE} .
    - docker login -u $CI_REGISTRY_USER -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker push $CI_REGISTRY_IMAGE:${CI_COMMIT_SHORT_SHA}




#Docker Build:
#  stage: build
#  image: docker:stable
#  services:
#    - docker:dind
#  script:
#    - docker login registry.gitlab.com -u ${CI_REGISTRY_USER} -p ${CI_JOB_TOKEN} 
#    # docker login -u gitlab-ci-token -p ${CI_JOB_TOKEN} ${CI_REGISTRY}
#    - docker build -t ${CI_REGISTRY}/${CI_PROJECT_PATH}/${CI_PROJECT_NAME}:${CI_COMMIT_REF_SLUG} .
#    - docker push ${CI_REGISTRY}/${CI_PROJECT_PATH}/${CI_PROJECT_NAME}:${CI_COMMIT_REF_SLUG}


Deploy:
  stage: deploy    
  before_script:
    - export ANSIBLE_CONFIG=./ansible.cfg
    - 'command -v ssh-agent >/dev/null || ( apt-get update -y && apt-get install openssh-client -y )'
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan gitlab.com >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts

  image:
    name: uhligit/ansible:2.1.0-3-g46e41b3

  script:
    - echo "BUILD"
    - ansible all -m ping -i ./inventory 
    - ansible-playbook ansible/skillbox_app.yml -i ./inventory -b -vv
  tags: 
    - vm_aws_docker_runner  
  allow_failure: true 
  
test:
  stage: test
  image:
    name: ubuntu:focal
  script: 
    - echo "TEST"
    - ./run-tests.sh
  tags: 
    - vm_aws_docker_runner   
  allow_failure: true



